<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="talent-suite.xml" />
	<munit:test name="GetDegrees-test" doc:id="91e45c8b-1418-4535-b91c-899fb336301a" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="69a4b4dc-599f-418f-beb6-a00ab017020c" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4696a354-7954-43a5-b8bb-4312ed40be70" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/xml --- readUrl('classpath://GetDegreestest/mock_payload.dwl')]" mediaType="application/xml" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://GetDegreestest/mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="jobRequisitionsDetails" value="#[output application/json --- readUrl('classpath://GetDegreestest/mock_variable_.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="candidate" value="#[output application/json --- readUrl('classpath://GetDegreestest/mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://GetDegreestest/mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="client_secret" value="#[output application/java --- readUrl('classpath://GetDegreestest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="client_id" value="#[output application/java --- readUrl('classpath://GetDegreestest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f5cb1c50-c8b7-4e8c-9645-ca29dfbd84dc" >
				<munit:payload value="#[output application/xml --- readUrl('classpath://GetDegreestest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/xml" />
				<munit:attributes value="#[readUrl('classpath://GetDegreestest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="jobRequisitionsDetails" value="#[output application/json --- readUrl('classpath://GetDegreestest/set-event_variable_.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="candidate" value="#[output application/json --- readUrl('classpath://GetDegreestest/set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://GetDegreestest/set-event_variable_2.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="client_secret" value="#[output application/java --- readUrl('classpath://GetDegreestest/set-event_variable_3.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="client_id" value="#[output application/java --- readUrl('classpath://GetDegreestest/set-event_variable_4.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to GetDegrees" doc:id="fc09c91b-fb19-4f8c-9bf4-91aaf24dd0c1" name="GetDegrees"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5977ec94-fe33-41a3-be06-26a8bd26740a" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import GetDegreestest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="GetFieldOfStudy-test" doc:id="5c830549-7edb-4a01-962e-1d604dfcf17b" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="51dc3bf5-9793-4612-91f0-59dd07b76f0f" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="318ab654-8591-4959-8cc5-5e09a8466c80" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/xml --- readUrl('classpath://GetFieldOfStudytest/mock_payload.dwl')]" mediaType="application/xml" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://GetFieldOfStudytest/mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="jobRequisitionsDetails" value="#[output application/json --- readUrl('classpath://GetFieldOfStudytest/mock_variable_.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="candidate" value="#[output application/json --- readUrl('classpath://GetFieldOfStudytest/mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://GetFieldOfStudytest/mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="client_secret" value="#[output application/java --- readUrl('classpath://GetFieldOfStudytest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="client_id" value="#[output application/java --- readUrl('classpath://GetFieldOfStudytest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="b4b51a2b-d426-4294-8596-5a0e6ac2486d" >
				<munit:payload value="#[output application/xml --- readUrl('classpath://GetFieldOfStudytest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/xml" />
				<munit:attributes value="#[readUrl('classpath://GetFieldOfStudytest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="jobRequisitionsDetails" value="#[output application/json --- readUrl('classpath://GetFieldOfStudytest/set-event_variable_.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="candidate" value="#[output application/json --- readUrl('classpath://GetFieldOfStudytest/set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://GetFieldOfStudytest/set-event_variable_2.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="client_secret" value="#[output application/java --- readUrl('classpath://GetFieldOfStudytest/set-event_variable_3.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="client_id" value="#[output application/java --- readUrl('classpath://GetFieldOfStudytest/set-event_variable_4.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to GetFieldOfStudy" doc:id="89206543-e0b0-4dc2-8c21-3c8ef67fe9a0" name="GetFieldOfStudy"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="e38cae3f-b4b0-4977-aab0-74384a1e25c3" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import GetFieldOfStudytest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="getDegreesAndFieldOfStudyReferences-test1" doc:id="c002bf15-d147-4e1e-8370-4e042f86812f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Get Degrees" doc:id="a95dff4f-8dad-4ec1-864a-6c8f227ce4ed" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="deedcc14-fbea-4a82-9aa2-ed812ced1a4d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/xml --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_payload.dwl')]" mediaType="application/xml" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="jobRequisitionsDetails" value="#[output application/json --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="candidate" value="#[output application/json --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="client_secret" value="#[output application/java --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="degreeData" value="#[output application/xml --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_4.dwl')]" mediaType="application/xml" encoding="UTF-8" />
						<munit-tools:variable key="client_id" value="#[output application/java --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Get Field of Study" doc:id="96ace2fd-c8d0-4231-b69f-f156e01d4c3b" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2f4cc934-f47d-4406-a07c-8d6f6ad99538" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/xml --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_payload.dwl')]" mediaType="application/xml" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="jobRequisitionsDetails" value="#[output application/json --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="candidate" value="#[output application/json --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="client_secret" value="#[output application/java --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="getField" value="#[output application/xml --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_4.dwl')]" mediaType="application/xml" encoding="UTF-8" />
						<munit-tools:variable key="client_id" value="#[output application/java --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			
			<munit:set-event doc:name="Set Input" doc:id="af74baa2-7ac1-4789-b0d6-d0ba888cd451" >
				<munit:payload value="#[output application/xml --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/xml" />
				<munit:attributes value="#[readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="jobRequisitionsDetails" value="#[output application/json --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/set-event_variable_.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="candidate" value="#[output application/json --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/set-event_variable_2.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="client_secret" value="#[output application/java --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/set-event_variable_3.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="client_id" value="#[output application/java --- readUrl('classpath://getDegreesAndFieldOfStudyReferencestest1/set-event_variable_4.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getDegreesAndFieldOfStudyReferences" doc:id="42872f7b-88f8-46d5-9e3b-1faf11bab101" name="getDegreesAndFieldOfStudyReferences"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="25f2f776-b46d-4d0a-b534-be04f10280c7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getDegreesAndFieldOfStudyReferencestest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="9fec3af1-8663-4199-8c2f-39c30fd6d623" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8c34d396-6151-40dd-a185-bd68f76d687e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="29e739fd-3798-4064-9240-535514fd646c" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f1ee7bee-ea6c-4462-a782-e39171db5c49" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


	

</mule>
